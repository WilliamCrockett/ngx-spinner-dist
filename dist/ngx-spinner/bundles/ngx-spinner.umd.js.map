{"version":3,"file":"ngx-spinner.umd.js","sources":["../../../projects/ngx-spinner/src/lib/ngx-spinner.enum.ts","../../../projects/ngx-spinner/src/lib/ngx-spinner.service.ts","../../../projects/ngx-spinner/src/lib/safe-html.pipe.ts","../../../projects/ngx-spinner/src/lib/ngx-spinner.component.html","../../../projects/ngx-spinner/src/lib/ngx-spinner.component.ts","../../../projects/ngx-spinner/src/lib/ngx-spinner.module.ts","../../../projects/ngx-spinner/src/public_api.ts","../../../projects/ngx-spinner/src/ngx-spinner.ts"],"sourcesContent":["export const LOADERS = {\r\n  'ball-8bits': 16,\r\n  'ball-atom': 4,\r\n  'ball-beat': 3,\r\n  'ball-circus': 5,\r\n  'ball-climbing-dot': 4,\r\n  'ball-clip-rotate': 1,\r\n  'ball-clip-rotate-multiple': 2,\r\n  'ball-clip-rotate-pulse': 2,\r\n  'ball-elastic-dots': 5,\r\n  'ball-fall': 3,\r\n  'ball-fussion': 4,\r\n  'ball-grid-beat': 9,\r\n  'ball-grid-pulse': 9,\r\n  'ball-newton-cradle': 4,\r\n  'ball-pulse': 3,\r\n  'ball-pulse-rise': 5,\r\n  'ball-pulse-sync': 3,\r\n  'ball-rotate': 1,\r\n  'ball-running-dots': 5,\r\n  'ball-scale': 1,\r\n  'ball-scale-multiple': 3,\r\n  'ball-scale-pulse': 2,\r\n  'ball-scale-ripple': 1,\r\n  'ball-scale-ripple-multiple': 3,\r\n  'ball-spin': 8,\r\n  'ball-spin-clockwise': 8,\r\n  'ball-spin-clockwise-fade': 8,\r\n  'ball-spin-clockwise-fade-rotating': 8,\r\n  'ball-spin-fade': 8,\r\n  'ball-spin-fade-rotating': 8,\r\n  'ball-spin-rotate': 2,\r\n  'ball-square-clockwise-spin': 8,\r\n  'ball-square-spin': 8,\r\n  'ball-triangle-path': 3,\r\n  'ball-zig-zag': 2,\r\n  'ball-zig-zag-deflect': 2,\r\n  'cog': 1,\r\n  'cube-transition': 2,\r\n  'fire': 3,\r\n  'line-scale': 5,\r\n  'line-scale-party': 5,\r\n  'line-scale-pulse-out': 5,\r\n  'line-scale-pulse-out-rapid': 5,\r\n  'line-spin-clockwise-fade': 8,\r\n  'line-spin-clockwise-fade-rotating': 8,\r\n  'line-spin-fade': 8,\r\n  'line-spin-fade-rotating': 8,\r\n  'pacman': 6,\r\n  'square-jelly-box': 2,\r\n  'square-loader': 1,\r\n  'square-spin': 1,\r\n  'timer': 1,\r\n  'triangle-skew-spin': 1\r\n};\r\n\r\nexport const DEFAULTS = {\r\n  BD_COLOR: 'rgba(51,51,51,0.8)',\r\n  SPINNER_COLOR: '#fff',\r\n  SPINNER_TYPE: 'ball-scale-multiple',\r\n  Z_INDEX: 99999,\r\n};\r\n\r\nexport const PRIMARY_SPINNER = 'primary';\r\n\r\nexport type Size = 'default' | 'small' | 'medium' | 'large';\r\n\r\nexport interface Spinner {\r\n  bdColor?: string;\r\n  size?: Size;\r\n  color?: string;\r\n  type?: string;\r\n  fullScreen?: boolean;\r\n  zIndex?: number;\r\n  template?: string;\r\n}\r\n\r\nexport class NgxSpinner {\r\n  name: string;\r\n  bdColor: string;\r\n  size: Size;\r\n  color: string;\r\n  type: string;\r\n  class: string;\r\n  divCount: number;\r\n  divArray: Array<number>;\r\n  fullScreen: boolean;\r\n  show: boolean;\r\n  zIndex: number;\r\n  template: string;\r\n\r\n  constructor(init?: Partial<NgxSpinner>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { NgxSpinner, PRIMARY_SPINNER, Spinner } from './ngx-spinner.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxSpinnerService {\r\n  /**\r\n   * Spinner observable\r\n   *\r\n   * @memberof NgxSpinnerService\r\n   */\r\n  // private spinnerObservable = new ReplaySubject<NgxSpinner>(1);\r\n  private spinnerObservable = new BehaviorSubject<NgxSpinner>(null);\r\n  /**\r\n   * Creates an instance of NgxSpinnerService.\r\n   * @memberof NgxSpinnerService\r\n   */\r\n  constructor() { }\r\n  /**\r\n  * Get subscription of desired spinner\r\n  * @memberof NgxSpinnerService\r\n  **/\r\n  getSpinner(name: string): Observable<NgxSpinner> {\r\n    return this.spinnerObservable.asObservable().pipe(filter((x: NgxSpinner) => x && x.name === name));\r\n  }\r\n  /**\r\n   * To show spinner\r\n   *\r\n   * @memberof NgxSpinnerService\r\n   */\r\n  show(name: string = PRIMARY_SPINNER, spinner?: Spinner): Promise<boolean> {\r\n    return new Promise((resolve, _reject) => {\r\n      setTimeout(() => {\r\n        if (spinner && Object.keys(spinner).length) {\r\n          spinner['name'] = name;\r\n          this.spinnerObservable.next(new NgxSpinner({ ...spinner, show: true }));\r\n          resolve(true);\r\n        } else {\r\n          this.spinnerObservable.next(new NgxSpinner({ name, show: true }));\r\n          resolve(true);\r\n        }\r\n      }, 10);\r\n    });\r\n  }\r\n\r\n  /**\r\n  * To hide spinner\r\n  *\r\n  * @memberof NgxSpinnerService\r\n  */\r\n  hide(name: string = PRIMARY_SPINNER, debounce: number = 10): Promise<boolean> {\r\n    return new Promise((resolve, _reject) => {\r\n      setTimeout(() => {\r\n        this.spinnerObservable.next(new NgxSpinner({ name, show: false }));\r\n        resolve(true);\r\n      }, debounce);\r\n    });\r\n  }\r\n\r\n}","import { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'safeHtml'\r\n})\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  transform(v: string): SafeHtml {\r\n    if (v) {\r\n      return this._sanitizer.bypassSecurityTrustHtml(v);\r\n    }\r\n  }\r\n}\r\n","<div [@fadeIn]=\"'in'\" *ngIf=\"spinner.show\" class=\"overlay\" [style.background-color]=\"spinner.bdColor\"\r\n  [style.z-index]=\"spinner.zIndex\" [style.position]=\"spinner.fullScreen ? 'fixed' : 'absolute'\">\r\n  <div *ngIf=\"!template\" [class]=\"spinner.class\" [style.color]=\"spinner.color\">\r\n    <div *ngFor=\"let index of spinner.divArray\"></div>\r\n  </div>\r\n  <div *ngIf=\"template\" [innerHTML]=\"template | safeHtml\"></div>\r\n  <div class=\"loading-text\" [style.z-index]=\"spinner.zIndex\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>","import {\r\n  Component,\r\n  OnDestroy,\r\n  Input,\r\n  OnInit,\r\n  OnChanges,\r\n  SimpleChange,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { NgxSpinnerService } from './ngx-spinner.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { LOADERS, DEFAULTS, Size, NgxSpinner, PRIMARY_SPINNER } from './ngx-spinner.enum';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'ngx-spinner',\r\n  templateUrl: 'ngx-spinner.component.html',\r\n  styleUrls: ['ngx-spinner.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('fadeIn', [\r\n      state('in', style({ opacity: 1 })),\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate(300)\r\n      ]),\r\n      transition(':leave',\r\n        animate(200, style({ opacity: 0 })))\r\n    ])\r\n  ]\r\n})\r\nexport class NgxSpinnerComponent implements OnDestroy, OnInit, OnChanges {\r\n\r\n  /**\r\n   * To set backdrop color\r\n   * Only supports RGBA color format\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() bdColor: string;\r\n  /**\r\n   * To set spinner size\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() size: Size;\r\n  /**\r\n   * To set spinner color(DEFAULTS.SPINNER_COLOR)\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() color: string;\r\n  /**\r\n   * To set type of spinner\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() type: string;\r\n  /**\r\n   * To toggle fullscreen mode\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() fullScreen: boolean;\r\n  /**\r\n   * Spinner name\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() name: string;\r\n  /**\r\n   * z-index value\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() zIndex: number;\r\n  /**\r\n   * Custom template for spinner/loader\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() template: string;\r\n  /**\r\n   * Spinner Object\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  spinner: NgxSpinner = new NgxSpinner();\r\n  /**\r\n   * Array for spinner's divs\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  divArray: Array<number>;\r\n  /**\r\n   * Counter for div\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   *\r\n   */\r\n  divCount: number;\r\n  /**\r\n   * Show spinner\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n  **/\r\n  show: boolean;\r\n  /**\r\n   * Unsubscribe from spinner's observable\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n  **/\r\n  ngUnsubscribe: Subject<void> = new Subject();\r\n\r\n  /**\r\n   * Creates an instance of NgxSpinnerComponent.\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  constructor(private spinnerService: NgxSpinnerService, private changeDetector: ChangeDetectorRef) {\r\n    this.bdColor = DEFAULTS.BD_COLOR;\r\n    this.zIndex = DEFAULTS.Z_INDEX;\r\n    this.color = DEFAULTS.SPINNER_COLOR;\r\n    this.type = DEFAULTS.SPINNER_TYPE;\r\n    this.size = 'large';\r\n    this.fullScreen = true;\r\n    this.name = PRIMARY_SPINNER;\r\n    this.template = null;\r\n\r\n    this.divArray = [];\r\n    this.divCount = 0;\r\n    this.show = false;\r\n  }\r\n  /**\r\n   * Initialization method\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  ngOnInit() {\r\n    this.setDefaultOptions();\r\n    this.spinnerService.getSpinner(this.name)\r\n      .pipe(\r\n        takeUntil(this.ngUnsubscribe)\r\n      )\r\n      .subscribe((spinner: NgxSpinner) => {\r\n        this.setDefaultOptions();\r\n        Object.assign(this.spinner, spinner);\r\n        if (spinner.show) {\r\n          this.onInputChange();\r\n        }\r\n        this.changeDetector.markForCheck();\r\n      });\r\n  }\r\n  /**\r\n   * To set default ngx-spinner options\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  setDefaultOptions = () => {\r\n    this.spinner = new NgxSpinner({\r\n      name: this.name,\r\n      bdColor: this.bdColor,\r\n      size: this.size,\r\n      color: this.color,\r\n      type: this.type,\r\n      fullScreen: this.fullScreen,\r\n      divArray: this.divArray,\r\n      divCount: this.divCount,\r\n      show: this.show,\r\n      zIndex: this.zIndex,\r\n      template: this.template,\r\n    });\r\n  }\r\n  /**\r\n   * On changes event for input variables\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\r\n    for (const propName in changes) {\r\n      if (propName) {\r\n        const changedProp = changes[propName];\r\n        if (changedProp.isFirstChange()) {\r\n          return;\r\n        } else if (typeof changedProp.currentValue !== 'undefined' && changedProp.currentValue !== changedProp.previousValue) {\r\n          if (changedProp.currentValue !== '') {\r\n            this.spinner[propName] = changedProp.currentValue;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * To get class for spinner\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  getClass(type: string, size: Size): string {\r\n    this.spinner.divCount = LOADERS[type];\r\n    this.spinner.divArray = Array(this.spinner.divCount).fill(0).map((x, i) => i);\r\n    let sizeClass = '';\r\n    switch (size.toLowerCase()) {\r\n      case 'small':\r\n        sizeClass = 'la-sm';\r\n        break;\r\n      case 'medium':\r\n        sizeClass = 'la-2x';\r\n        break;\r\n      case 'large':\r\n        sizeClass = 'la-3x';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return 'la-' + type + ' ' + sizeClass;\r\n  }\r\n  /**\r\n   * Check if input variables have changed\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  onInputChange() {\r\n    this.spinner.class = this.getClass(this.spinner.type, this.spinner.size);\r\n  }\r\n  /**\r\n   * Component destroy event\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  ngOnDestroy() {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxSpinnerComponent } from './ngx-spinner.component';\r\nimport { SafeHtmlPipe } from './safe-html.pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [NgxSpinnerComponent, SafeHtmlPipe],\r\n  exports: [NgxSpinnerComponent]\r\n})\r\nexport class NgxSpinnerModule { }\r\n","/*\r\n * Public API Surface of ngx-spinner\r\n */\r\nexport * from './lib/ngx-spinner.service';\r\nexport * from './lib/ngx-spinner.component';\r\nexport * from './lib/ngx-spinner.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["BehaviorSubject","filter","Injectable","Pipe","i0.ɵɵelement","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵclassMap","i0.ɵɵstyleProp","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵprojection","Subject","takeUntil","trigger","state","style","transition","animate","Component","ChangeDetectionStrategy","Input","CommonModule","NgModule"],"mappings":"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"}