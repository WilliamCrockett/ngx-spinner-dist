{"version":3,"file":"ngx-spinner.js","sources":["../../../projects/ngx-spinner/src/lib/ngx-spinner.enum.ts","../../../projects/ngx-spinner/src/lib/ngx-spinner.service.ts","../../../projects/ngx-spinner/src/lib/safe-html.pipe.ts","../../../projects/ngx-spinner/src/lib/ngx-spinner.component.html","../../../projects/ngx-spinner/src/lib/ngx-spinner.component.ts","../../../projects/ngx-spinner/src/lib/ngx-spinner.module.ts","../../../projects/ngx-spinner/src/public_api.ts","../../../projects/ngx-spinner/src/ngx-spinner.ts"],"sourcesContent":["export const LOADERS = {\r\n  'ball-8bits': 16,\r\n  'ball-atom': 4,\r\n  'ball-beat': 3,\r\n  'ball-circus': 5,\r\n  'ball-climbing-dot': 4,\r\n  'ball-clip-rotate': 1,\r\n  'ball-clip-rotate-multiple': 2,\r\n  'ball-clip-rotate-pulse': 2,\r\n  'ball-elastic-dots': 5,\r\n  'ball-fall': 3,\r\n  'ball-fussion': 4,\r\n  'ball-grid-beat': 9,\r\n  'ball-grid-pulse': 9,\r\n  'ball-newton-cradle': 4,\r\n  'ball-pulse': 3,\r\n  'ball-pulse-rise': 5,\r\n  'ball-pulse-sync': 3,\r\n  'ball-rotate': 1,\r\n  'ball-running-dots': 5,\r\n  'ball-scale': 1,\r\n  'ball-scale-multiple': 3,\r\n  'ball-scale-pulse': 2,\r\n  'ball-scale-ripple': 1,\r\n  'ball-scale-ripple-multiple': 3,\r\n  'ball-spin': 8,\r\n  'ball-spin-clockwise': 8,\r\n  'ball-spin-clockwise-fade': 8,\r\n  'ball-spin-clockwise-fade-rotating': 8,\r\n  'ball-spin-fade': 8,\r\n  'ball-spin-fade-rotating': 8,\r\n  'ball-spin-rotate': 2,\r\n  'ball-square-clockwise-spin': 8,\r\n  'ball-square-spin': 8,\r\n  'ball-triangle-path': 3,\r\n  'ball-zig-zag': 2,\r\n  'ball-zig-zag-deflect': 2,\r\n  'cog': 1,\r\n  'cube-transition': 2,\r\n  'fire': 3,\r\n  'line-scale': 5,\r\n  'line-scale-party': 5,\r\n  'line-scale-pulse-out': 5,\r\n  'line-scale-pulse-out-rapid': 5,\r\n  'line-spin-clockwise-fade': 8,\r\n  'line-spin-clockwise-fade-rotating': 8,\r\n  'line-spin-fade': 8,\r\n  'line-spin-fade-rotating': 8,\r\n  'pacman': 6,\r\n  'square-jelly-box': 2,\r\n  'square-loader': 1,\r\n  'square-spin': 1,\r\n  'timer': 1,\r\n  'triangle-skew-spin': 1\r\n};\r\n\r\nexport const DEFAULTS = {\r\n  BD_COLOR: 'rgba(51,51,51,0.8)',\r\n  SPINNER_COLOR: '#fff',\r\n  SPINNER_TYPE: 'ball-scale-multiple',\r\n  Z_INDEX: 99999,\r\n};\r\n\r\nexport const PRIMARY_SPINNER = 'primary';\r\n\r\nexport type Size = 'default' | 'small' | 'medium' | 'large';\r\n\r\nexport interface Spinner {\r\n  bdColor?: string;\r\n  size?: Size;\r\n  color?: string;\r\n  type?: string;\r\n  fullScreen?: boolean;\r\n  zIndex?: number;\r\n  template?: string;\r\n}\r\n\r\nexport class NgxSpinner {\r\n  name: string;\r\n  bdColor: string;\r\n  size: Size;\r\n  color: string;\r\n  type: string;\r\n  class: string;\r\n  divCount: number;\r\n  divArray: Array<number>;\r\n  fullScreen: boolean;\r\n  show: boolean;\r\n  zIndex: number;\r\n  template: string;\r\n\r\n  constructor(init?: Partial<NgxSpinner>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { NgxSpinner, PRIMARY_SPINNER, Spinner } from './ngx-spinner.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxSpinnerService {\r\n  /**\r\n   * Spinner observable\r\n   *\r\n   * @memberof NgxSpinnerService\r\n   */\r\n  // private spinnerObservable = new ReplaySubject<NgxSpinner>(1);\r\n  private spinnerObservable = new BehaviorSubject<NgxSpinner>(null);\r\n  /**\r\n   * Creates an instance of NgxSpinnerService.\r\n   * @memberof NgxSpinnerService\r\n   */\r\n  constructor() { }\r\n  /**\r\n  * Get subscription of desired spinner\r\n  * @memberof NgxSpinnerService\r\n  **/\r\n  getSpinner(name: string): Observable<NgxSpinner> {\r\n    return this.spinnerObservable.asObservable().pipe(filter((x: NgxSpinner) => x && x.name === name));\r\n  }\r\n  /**\r\n   * To show spinner\r\n   *\r\n   * @memberof NgxSpinnerService\r\n   */\r\n  show(name: string = PRIMARY_SPINNER, spinner?: Spinner): Promise<boolean> {\r\n    return new Promise((resolve, _reject) => {\r\n      setTimeout(() => {\r\n        if (spinner && Object.keys(spinner).length) {\r\n          spinner['name'] = name;\r\n          this.spinnerObservable.next(new NgxSpinner({ ...spinner, show: true }));\r\n          resolve(true);\r\n        } else {\r\n          this.spinnerObservable.next(new NgxSpinner({ name, show: true }));\r\n          resolve(true);\r\n        }\r\n      }, 10);\r\n    });\r\n  }\r\n\r\n  /**\r\n  * To hide spinner\r\n  *\r\n  * @memberof NgxSpinnerService\r\n  */\r\n  hide(name: string = PRIMARY_SPINNER, debounce: number = 10): Promise<boolean> {\r\n    return new Promise((resolve, _reject) => {\r\n      setTimeout(() => {\r\n        this.spinnerObservable.next(new NgxSpinner({ name, show: false }));\r\n        resolve(true);\r\n      }, debounce);\r\n    });\r\n  }\r\n\r\n}","import { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'safeHtml'\r\n})\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  transform(v: string): SafeHtml {\r\n    if (v) {\r\n      return this._sanitizer.bypassSecurityTrustHtml(v);\r\n    }\r\n  }\r\n}\r\n","<div [@fadeIn]=\"'in'\" *ngIf=\"spinner.show\" class=\"overlay\" [style.background-color]=\"spinner.bdColor\"\r\n  [style.z-index]=\"spinner.zIndex\" [style.position]=\"spinner.fullScreen ? 'fixed' : 'absolute'\">\r\n  <div *ngIf=\"!template\" [class]=\"spinner.class\" [style.color]=\"spinner.color\">\r\n    <div *ngFor=\"let index of spinner.divArray\"></div>\r\n  </div>\r\n  <div *ngIf=\"template\" [innerHTML]=\"template | safeHtml\"></div>\r\n  <div class=\"loading-text\" [style.z-index]=\"spinner.zIndex\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>","import {\r\n  Component,\r\n  OnDestroy,\r\n  Input,\r\n  OnInit,\r\n  OnChanges,\r\n  SimpleChange,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { NgxSpinnerService } from './ngx-spinner.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { LOADERS, DEFAULTS, Size, NgxSpinner, PRIMARY_SPINNER } from './ngx-spinner.enum';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'ngx-spinner',\r\n  templateUrl: 'ngx-spinner.component.html',\r\n  styleUrls: ['ngx-spinner.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('fadeIn', [\r\n      state('in', style({ opacity: 1 })),\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate(300)\r\n      ]),\r\n      transition(':leave',\r\n        animate(200, style({ opacity: 0 })))\r\n    ])\r\n  ]\r\n})\r\nexport class NgxSpinnerComponent implements OnDestroy, OnInit, OnChanges {\r\n\r\n  /**\r\n   * To set backdrop color\r\n   * Only supports RGBA color format\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() bdColor: string;\r\n  /**\r\n   * To set spinner size\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() size: Size;\r\n  /**\r\n   * To set spinner color(DEFAULTS.SPINNER_COLOR)\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() color: string;\r\n  /**\r\n   * To set type of spinner\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() type: string;\r\n  /**\r\n   * To toggle fullscreen mode\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() fullScreen: boolean;\r\n  /**\r\n   * Spinner name\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() name: string;\r\n  /**\r\n   * z-index value\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() zIndex: number;\r\n  /**\r\n   * Custom template for spinner/loader\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  @Input() template: string;\r\n  /**\r\n   * Spinner Object\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  spinner: NgxSpinner = new NgxSpinner();\r\n  /**\r\n   * Array for spinner's divs\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  divArray: Array<number>;\r\n  /**\r\n   * Counter for div\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   *\r\n   */\r\n  divCount: number;\r\n  /**\r\n   * Show spinner\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n  **/\r\n  show: boolean;\r\n  /**\r\n   * Unsubscribe from spinner's observable\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n  **/\r\n  ngUnsubscribe: Subject<void> = new Subject();\r\n\r\n  /**\r\n   * Creates an instance of NgxSpinnerComponent.\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  constructor(private spinnerService: NgxSpinnerService, private changeDetector: ChangeDetectorRef) {\r\n    this.bdColor = DEFAULTS.BD_COLOR;\r\n    this.zIndex = DEFAULTS.Z_INDEX;\r\n    this.color = DEFAULTS.SPINNER_COLOR;\r\n    this.type = DEFAULTS.SPINNER_TYPE;\r\n    this.size = 'large';\r\n    this.fullScreen = true;\r\n    this.name = PRIMARY_SPINNER;\r\n    this.template = null;\r\n\r\n    this.divArray = [];\r\n    this.divCount = 0;\r\n    this.show = false;\r\n  }\r\n  /**\r\n   * Initialization method\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  ngOnInit() {\r\n    this.setDefaultOptions();\r\n    this.spinnerService.getSpinner(this.name)\r\n      .pipe(\r\n        takeUntil(this.ngUnsubscribe)\r\n      )\r\n      .subscribe((spinner: NgxSpinner) => {\r\n        this.setDefaultOptions();\r\n        Object.assign(this.spinner, spinner);\r\n        if (spinner.show) {\r\n          this.onInputChange();\r\n        }\r\n        this.changeDetector.markForCheck();\r\n      });\r\n  }\r\n  /**\r\n   * To set default ngx-spinner options\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  setDefaultOptions = () => {\r\n    this.spinner = new NgxSpinner({\r\n      name: this.name,\r\n      bdColor: this.bdColor,\r\n      size: this.size,\r\n      color: this.color,\r\n      type: this.type,\r\n      fullScreen: this.fullScreen,\r\n      divArray: this.divArray,\r\n      divCount: this.divCount,\r\n      show: this.show,\r\n      zIndex: this.zIndex,\r\n      template: this.template,\r\n    });\r\n  }\r\n  /**\r\n   * On changes event for input variables\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\r\n    for (const propName in changes) {\r\n      if (propName) {\r\n        const changedProp = changes[propName];\r\n        if (changedProp.isFirstChange()) {\r\n          return;\r\n        } else if (typeof changedProp.currentValue !== 'undefined' && changedProp.currentValue !== changedProp.previousValue) {\r\n          if (changedProp.currentValue !== '') {\r\n            this.spinner[propName] = changedProp.currentValue;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * To get class for spinner\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  getClass(type: string, size: Size): string {\r\n    this.spinner.divCount = LOADERS[type];\r\n    this.spinner.divArray = Array(this.spinner.divCount).fill(0).map((x, i) => i);\r\n    let sizeClass = '';\r\n    switch (size.toLowerCase()) {\r\n      case 'small':\r\n        sizeClass = 'la-sm';\r\n        break;\r\n      case 'medium':\r\n        sizeClass = 'la-2x';\r\n        break;\r\n      case 'large':\r\n        sizeClass = 'la-3x';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return 'la-' + type + ' ' + sizeClass;\r\n  }\r\n  /**\r\n   * Check if input variables have changed\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  onInputChange() {\r\n    this.spinner.class = this.getClass(this.spinner.type, this.spinner.size);\r\n  }\r\n  /**\r\n   * Component destroy event\r\n   *\r\n   * @memberof NgxSpinnerComponent\r\n   */\r\n  ngOnDestroy() {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxSpinnerComponent } from './ngx-spinner.component';\r\nimport { SafeHtmlPipe } from './safe-html.pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [NgxSpinnerComponent, SafeHtmlPipe],\r\n  exports: [NgxSpinnerComponent]\r\n})\r\nexport class NgxSpinnerModule { }\r\n","/*\r\n * Public API Surface of ngx-spinner\r\n */\r\nexport * from './lib/ngx-spinner.service';\r\nexport * from './lib/ngx-spinner.component';\r\nexport * from './lib/ngx-spinner.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i0.ɵɵelement","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵclassMap","i0.ɵɵstyleProp","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵprojection"],"mappings":"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"}